name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  ci:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        distro:
          - arch
          - centos
          - centos_epel
          - clear
          - debian
          - ubuntu
          - fedora
          - openmandriva
          - mageia
          - opensuse
          - photon
        format:
          - directory
          - tar
          - gpt_ext4
          - gpt_xfs
          - gpt_btrfs
          - gpt_squashfs
          - plain_squashfs
        exclude:
          # CentOS 8 and Clear Linux do not support btrfs.
          - distro: centos
            format: gpt_btrfs
          - distro: centos_epel
            format: gpt_btrfs
          # Remove once https://github.com/clearlinux/clr-boot-manager/pull/238 is merged and available.
          - distro: clear
            format: gpt_btrfs
          # Remove once https://github.com/vmware/tdnf/issues/154 is fixed.
          - distro: photon
            format: gpt_btrfs

    steps:
    - uses: actions/checkout@v2
    - uses: ./.github/actions/setup-mkosi

    - name: Build ${{ matrix.distro }}/${{ matrix.format }}
      run: sudo ./mkosi
            --debug run
            --distribution ${{ matrix.distro }}
            --format ${{ matrix.format }}

    - name: Build ${{ matrix.distro }}/${{ matrix.format }} UEFI
      if: matrix.format != 'directory' && matrix.format != 'tar' && matrix.format != 'plain_squashfs' &&
          (matrix.distro != 'clear' || matrix.format != 'gpt_squashfs') && matrix.distro != 'photon'
      run: sudo ./mkosi
            --debug run
            --distribution ${{ matrix.distro }}
            --format ${{ matrix.format }}
            --bootable
            --boot-protocols uefi
            --force

    - name: Build ${{ matrix.distro }}/${{ matrix.format }} BIOS
      if: matrix.format != 'directory' && matrix.format != 'tar' && !contains(matrix.format, 'squashfs')
      run: sudo ./mkosi
            --debug run
            --distribution ${{ matrix.distro }}
            --format ${{ matrix.format }}
            --bootable
            --boot-protocols bios
            --force
