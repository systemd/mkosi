name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  unit-test:
    runs-on: ubuntu-22.04
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true
    steps:
    - uses: actions/checkout@v3

    - name: Install
      run: |
        sudo apt-get update
        sudo apt-get install pandoc
        python3 -m pip install --upgrade setuptools wheel pip
        python3 -m pip install pytest mypy types-cryptography isort pyflakes
        npm install -g pyright

    - name: Check that imports are sorted
      run: python3 -m isort --verbose --check-only mkosi/

    - name: Run pyflakes
      run: python3 -m pyflakes mkosi/ tests/

    - name: Check that tabs are not used in code
      run: sh -c '! git grep -P "\\t" "*.py"'

    - name: Type Checking (mypy)
      run: python3 -m mypy mkosi/ tests/

    - name: Type Checking (pyright)
      run: pyright mkosi/ tests/

    - name: Unit Tests
      run: python3 -m pytest -sv tests

    - name: Test execution from current working directory
      run: python3 -m mkosi -h

    - name: Test execution from current working directory (sudo call)
      run: sudo python3 -m mkosi -h

    - name: Test venv installation
      run: |
        python3 -m venv testvenv
        testvenv/bin/python3 -m pip install --upgrade setuptools wheel pip
        testvenv/bin/python3 -m pip install .
        testvenv/bin/mkosi -h
        rm -rf testenv

    - name: Test editable venv installation
      run: |
        python3 -m venv testvenv
        testvenv/bin/python3 -m pip install --upgrade setuptools wheel pip
        testvenv/bin/python3 -m pip install --editable .
        testvenv/bin/mkosi -h
        rm -rf testenv

    - name: Test zipapp creation
      run: |
        ./tools/generate-zipapp.sh
        ./builddir/mkosi -h

    - name: Test shell scripts
      run: |
        sudo apt-get update && sudo apt-get install --no-install-recommends shellcheck
        bash -c 'shopt -s globstar; shellcheck bin/mkosi tools/*.sh'

  integration-test:
    runs-on: ubuntu-22.04
    needs: unit-test
    concurrency:
      group: ${{ github.workflow }}-${{ matrix.distro }}-${{ matrix.format }}-${{ github.ref }}
      cancel-in-progress: true
    defaults:
      run:
        working-directory: ./.github
    strategy:
      fail-fast: false
      matrix:
        distro:
          - arch
          - centos
          - debian
          - ubuntu
          - fedora
          - rocky
          - alma
          - opensuse
        format:
          - directory
          - tar
          - cpio
          - disk

    steps:
    - uses: actions/checkout@v3
    - uses: ./

    # Make sure the latest changes from the pull request are used.
    - name: Install
      run: sudo ln -svf $PWD/bin/mkosi /usr/bin/mkosi
      working-directory: ./

    - name: Configure ${{ matrix.distro }}/${{ matrix.format }}
      run: |
        tee mkosi.conf.d/00-ci.conf <<- EOF
        [Distribution]
        Distribution=${{ matrix.distro }}

        [Output]
        Format=${{ matrix.format }}
        EOF

    - name: Build ${{ matrix.distro }}/${{ matrix.format }}
      run: mkosi --debug build

    # systemd-resolved is enabled by default in Arch/Debian/Ubuntu (systemd default preset) but fails to
    # start in a systemd-nspawn container with --private-users so we mask it out here to avoid CI failures.
    # FIXME: Remove when Arch/Debian/Ubuntu ship systemd v253
    - name: Mask systemd-resolved
      if: matrix.format == 'directory'
      run: sudo systemctl --root image mask systemd-resolved

    - name: Boot ${{ matrix.distro }}/${{ matrix.format }} systemd-nspawn
      if: matrix.format == 'disk' || matrix.format == 'directory'
      run: sudo mkosi --debug boot

    - name: Boot ${{ matrix.distro }}/${{ matrix.format }} UEFI
      if: matrix.format == 'disk'
      run: timeout -k 30 10m mkosi --debug qemu
